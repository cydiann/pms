{
	"info": {
		"_postman_id": "pms-api-collection-v2",
		"name": "PMS - Procurement Management System API (Updated)",
		"description": "Complete API collection for testing the PMS Django backend with automatic fixture loading",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_token}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		},
		{
			"key": "jwt_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "refresh_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "üîê Authentication",
			"item": [
				{
					"name": "Login (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('jwt_token', response.access);",
									"    pm.collectionVariables.set('refresh_token', response.refresh);",
									"    pm.test('Login successful', function () {",
									"        pm.response.to.have.status(200);",
									"        pm.expect(response).to.have.property('access');",
									"        pm.expect(response).to.have.property('refresh');",
									"    });",
									"} else {",
									"    pm.test('Login failed', function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Login (CEO)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('jwt_token', response.access);",
									"    pm.collectionVariables.set('refresh_token', response.refresh);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"ceo\",\n    \"password\": \"ceo123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login",
								""
							]
						}
					}
				},
				{
					"name": "Login (Manager)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('jwt_token', response.access);",
									"    pm.collectionVariables.set('refresh_token', response.refresh);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"manager\",\n    \"password\": \"manager123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login",
								""
							]
						}
					}
				},
				{
					"name": "Login (Engineer)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('jwt_token', response.access);",
									"    pm.collectionVariables.set('refresh_token', response.refresh);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"engineer\",\n    \"password\": \"engineer123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login",
								""
							]
						}
					}
				},
				{
					"name": "Login (Purchasing)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('jwt_token', response.access);",
									"    pm.collectionVariables.set('refresh_token', response.refresh);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"purchasing\",\n    \"password\": \"purchasing123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login",
								""
							]
						}
					}
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('jwt_token', response.access);",
									"    pm.test('Token refreshed', function () {",
									"        pm.response.to.have.status(200);",
									"        pm.expect(response).to.have.property('access');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/refresh/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"refresh",
								""
							]
						}
					}
				}
			]
		},
		{
			"name": "üë• User Management",
			"item": [
				{
					"name": "List All Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth/users/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"users",
								""
							]
						}
					}
				},
				{
					"name": "Get Current User Profile",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth/users/me/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"users",
								"me",
								""
							]
						}
					}
				},
				{
					"name": "Get Current User Permissions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth/users/my_permissions/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"users",
								"my_permissions",
								""
							]
						}
					}
				},
				{
					"name": "Create New User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"newuser\",\n    \"first_name\": \"New\",\n    \"last_name\": \"User\",\n    \"password\": \"newuser123\",\n    \"supervisor\": null\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/users/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"users",
								""
							]
						}
					}
				},
				{
					"name": "Get User Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth/users/{{user_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"users",
								"{{user_id}}",
								""
							]
						}
					}
				},
				{
					"name": "Update User",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"Updated\",\n    \"last_name\": \"Name\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/users/{{user_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"users",
								"{{user_id}}",
								""
							]
						}
					}
				},
				{
					"name": "Assign Supervisor to User",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"supervisor\": 2\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/users/{{user_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"users",
								"{{user_id}}",
								""
							]
						}
					}
				},
				{
					"name": "Remove Supervisor from User",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"supervisor\": null\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/users/{{user_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"users",
								"{{user_id}}",
								""
							]
						}
					}
				},
				{
					"name": "Manage User Groups",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"action\": \"add\",\n    \"group_ids\": [1, 2]\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/users/{{user_id}}/manage_groups/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"users",
								"{{user_id}}",
								"manage_groups",
								""
							]
						}
					}
				},
				{
					"name": "List Users by Group ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth/users/by_group/?group_id=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"users",
								"by_group",
								""
							],
							"query": [
								{
									"key": "group_id",
									"value": "1",
									"description": "Filter users by group ID"
								}
							]
						}
					}
				},
				{
					"name": "List Users by Group Name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth/users/by_group/?group_name=Administrator",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"users",
								"by_group",
								""
							],
							"query": [
								{
									"key": "group_name",
									"value": "Administrator",
									"description": "Filter users by group name (e.g., Administrator, Supervisor, Employee, Purchasing Team)"
								}
							]
						}
					}
				}
			]
		},
		{
			"name": "üè¢ Groups & Permissions",
			"item": [
				{
					"name": "List All Groups",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth/groups/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"groups",
								""
							]
						}
					}
				},
				{
					"name": "Create New Group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Custom Group\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/groups/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"groups",
								""
							]
						}
					}
				},
				{
					"name": "List All Permissions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth/permissions/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"permissions",
								""
							]
						}
					}
				},
				{
					"name": "Permissions by Content Type",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth/permissions/by_content_type/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"permissions",
								"by_content_type",
								""
							]
						}
					}
				}
			]
		},
		{
			"name": "üèóÔ∏è Organization",
			"item": [
				{
					"name": "List Worksites",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/org/worksites/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"org",
								"worksites",
								""
							]
						}
					}
				},
				{
					"name": "Create Worksite",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"address\": \"456 New Site Ave\",\n    \"city\": \"New Construction City\",\n    \"country\": \"USA\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/org/worksites/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"org",
								"worksites",
								""
							]
						}
					}
				},
				{
					"name": "List Divisions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/org/divisions/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"org",
								"divisions",
								""
							]
						}
					}
				},
				{
					"name": "Create Division",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Quality Control\",\n    \"worksites\": [1]\n}"
						},
						"url": {
							"raw": "{{base_url}}/org/divisions/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"org",
								"divisions",
								""
							]
						}
					}
				}
			]
		},
		{
			"name": "üìã Requests Management",
			"item": [
				{
					"name": "List All Requests",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/requests/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"requests",
								""
							]
						}
					}
				},
				{
					"name": "Create New Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('request_id', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"request_number\": \"REQ-2025-001\",\n    \"item\": \"Safety Helmets\",\n    \"description\": \"High-quality safety helmets for construction workers\",\n    \"quantity\": \"50.00\",\n    \"unit\": \"pieces\",\n    \"category\": \"Safety Equipment\",\n    \"reason\": \"Need replacement helmets for new project\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/requests/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"requests",
								""
							]
						}
					}
				},
				{
					"name": "Get Request Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/requests/{{request_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"requests",
								"{{request_id}}",
								""
							]
						}
					}
				},
				{
					"name": "Submit Request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"notes\": \"Ready for approval\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/requests/{{request_id}}/submit/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"requests",
								"{{request_id}}",
								"submit",
								""
							]
						}
					}
				},
				{
					"name": "Approve Request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"notes\": \"Approved by supervisor\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/requests/{{request_id}}/approve/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"requests",
								"{{request_id}}",
								"approve",
								""
							]
						}
					}
				},
				{
					"name": "Reject Request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"notes\": \"Budget not approved for this quarter\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/requests/{{request_id}}/reject/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"requests",
								"{{request_id}}",
								"reject",
								""
							]
						}
					}
				},
				{
					"name": "Request Revision",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"notes\": \"Please provide more specific brand requirements\",\n    \"revision_reason\": \"Need more details\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/requests/{{request_id}}/request_revision/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"requests",
								"{{request_id}}",
								"request_revision",
								""
							]
						}
					}
				},
				{
					"name": "Mark as Purchased",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"notes\": \"Order placed with supplier ABC\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/requests/{{request_id}}/mark_purchased/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"requests",
								"{{request_id}}",
								"mark_purchased",
								""
							]
						}
					}
				},
				{
					"name": "Mark as Delivered",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"notes\": \"Items delivered to worksite\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/requests/{{request_id}}/mark_delivered/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"requests",
								"{{request_id}}",
								"mark_delivered",
								""
							]
						}
					}
				},
				{
					"name": "Get Request History",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/requests/{{request_id}}/history/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"requests",
								"{{request_id}}",
								"history",
								""
							]
						}
					}
				},
				{
					"name": "My Requests",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/requests/my_requests/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"requests",
								"my_requests",
								""
							]
						}
					}
				},
				{
					"name": "Pending Approvals",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/requests/pending_approvals/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"requests",
								"pending_approvals",
								""
							]
						}
					}
				},
				{
					"name": "Purchasing Queue",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/requests/purchasing_queue/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"requests",
								"purchasing_queue",
								""
							]
						}
					}
				},
				{
					"name": "Update Draft Request",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item\": \"Updated Safety Helmets\",\n    \"description\": \"High-quality updated safety helmets\",\n    \"quantity\": \"75.00\",\n    \"reason\": \"Updated quantity needed for expanded project\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/requests/{{request_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"requests",
								"{{request_id}}",
								""
							]
						}
					}
				},
				{
					"name": "Delete Request",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/requests/{{request_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"requests",
								"{{request_id}}",
								""
							]
						}
					}
				},
				{
					"name": "Filter Requests by Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/requests/?status=pending",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"requests",
								""
							],
							"query": [
								{
									"key": "status",
									"value": "pending",
									"description": "Options: draft, pending, approved, rejected, purchasing, ordered, delivered, completed"
								}
							]
						}
					}
				},
				{
					"name": "Search Requests",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/requests/?search=helmet",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"requests",
								""
							],
							"query": [
								{
									"key": "search",
									"value": "helmet",
									"description": "Search in item name, description, category"
								}
							]
						}
					}
				}
			]
		},
		{
			"name": "üìä Request Analytics",
			"item": [
				{
					"name": "Request Statistics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/requests/admin/stats/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"requests",
								"admin",
								"stats",
								""
							]
						}
					}
				},
				{
					"name": "Approval History",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/requests/approval-history/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"requests",
								"approval-history",
								""
							]
						}
					}
				},
				{
					"name": "Audit Logs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/requests/admin/audit-logs/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"requests",
								"admin",
								"audit-logs",
								""
							]
						}
					}
				}
			]
		},
		{
			"name": "üõ†Ô∏è Admin & Health",
			"item": [
				{
					"name": "Django Admin Panel",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/admin/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								""
							]
						}
					}
				},
				{
					"name": "API Root",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								""
							]
						}
					}
				},
				{
					"name": "Health Check",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								""
							]
						}
					}
				}
			]
		}
	]
}